<Window
    x:Class="Nagi.Popups.TrayPopup"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="using:Nagi.ViewModels"
    xmlns:converters="using:Nagi.Converters"
    xmlns:models="using:Nagi.Models"
    xmlns:media="using:CommunityToolkit.WinUI.Media"
    xmlns:muxm="using:Microsoft.UI.Xaml.Media"
    mc:Ignorable="d">

    <!--
    This popup window serves as the primary user interface when interacting with the system tray icon.
    It provides two main views: a player control view and a queue view.
    -->

    <Window.SystemBackdrop>
        <muxm:DesktopAcrylicBackdrop/>
    </Window.SystemBackdrop>

    <Border x:Name="OuterBorder"
            BorderThickness="1"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            CornerRadius="8"
            d:DataContext="{d:DesignInstance Type=viewmodels:PlayerViewModel}">

        <Border.Resources>
            <converters:TimeSpanToTimeStringConverter x:Key="TimeSpanToTimeStringConverter" />
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" Invert="True" />
            <converters:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter" />

            <Style x:Key="QueueListViewItemStyle" TargetType="ListViewItem">
                <Setter Property="Padding" Value="12,8" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            </Style>

            <Style x:Key="BackButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                <Setter Property="Padding" Value="0" />
                <Setter Property="Width" Value="32" />
                <Setter Property="Height" Value="32" />
            </Style>
        </Border.Resources>

        <Grid>
            <Border x:Name="CoverArtBackground"
                    CornerRadius="{Binding CornerRadius, ElementName=OuterBorder}">
                <Border.Background>
                    <media:ImageBlendBrush Source="{Binding AlbumArtSource}"
                                           Mode="SoftLight"
                                           Stretch="UniformToFill" 
                                           Opacity="0.3"/>
                </Border.Background>
            </Border>

            <Grid>
                <!-- Player View: Contains track info, seek bar, and media controls. -->
                <Grid Padding="16" RowSpacing="24"
                      Visibility="{Binding IsQueueViewVisible, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"
                      Background="Transparent">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" HorizontalAlignment="Stretch" Spacing="2">
                        <TextBlock Style="{ThemeResource BodyStrongTextBlockStyle}"
                                   Text="{Binding SongTitle, FallbackValue='A Really Long Song Title That Might Need to be Clipped'}"
                                   HorizontalAlignment="Center" TextAlignment="Center" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"/>
                        <TextBlock Style="{ThemeResource BodyTextBlockStyle}"
                                   Text="{Binding ArtistName, FallbackValue='An Artist With an Equally Long Name'}"
                                   Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                   HorizontalAlignment="Center" TextAlignment="Center" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"/>
                    </StackPanel>

                    <Slider Grid.Row="1"
                            Maximum="{Binding TotalDuration}" Value="{Binding CurrentPosition, Mode=TwoWay}"
                            ThumbToolTipValueConverter="{StaticResource TimeSpanToTimeStringConverter}"
                            IsThumbToolTipEnabled="True"
                            Style="{StaticResource MediaSeekerSliderStyle}"/>

                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Spacing="8">
                        <Button Command="{Binding ToggleMuteCommand}" Style="{StaticResource VolumeButtonStyle}" ToolTipService.ToolTip="{Binding VolumeButtonToolTip}">
                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="{Binding VolumeIconGlyph}"/>
                        </Button>
                        <Button Command="{Binding ToggleShuffleCommand}" Style="{StaticResource ShuffleButtonStyle}" ToolTipService.ToolTip="{Binding ShuffleButtonToolTip}">
                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="{Binding ShuffleIconGlyph}"/>
                        </Button>
                        <Button Command="{Binding PreviousCommand}" Style="{StaticResource PreviousButtonStyle}" ToolTipService.ToolTip="Previous">
                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph=""/>
                        </Button>
                        <Button Command="{Binding PlayPauseCommand}" Style="{StaticResource PlayPauseButtonStyle}" ToolTipService.ToolTip="{Binding PlayPauseButtonToolTip}">
                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="24" Glyph="{Binding PlayPauseIconGlyph}"/>
                        </Button>
                        <Button Command="{Binding NextCommand}" Style="{StaticResource NextButtonStyle}" ToolTipService.ToolTip="Next">
                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph=""/>
                        </Button>
                        <Button Command="{Binding CycleRepeatCommand}" Style="{StaticResource RepeatButtonStyle}" ToolTipService.ToolTip="{Binding RepeatButtonToolTip}">
                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="{Binding RepeatIconGlyph}"/>
                        </Button>
                        <Button Command="{Binding ShowQueueViewCommand}" Style="{StaticResource QueueButtonStyle}" ToolTipService.ToolTip="Current Queue">
                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph=""/>
                        </Button>
                    </StackPanel>
                </Grid>

                <!-- Queue View: Displays the list of upcoming tracks. -->
                <Grid Padding="12,16,16,16"
                      Visibility="{Binding IsQueueViewVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                      Background="Transparent">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Button HorizontalAlignment="Left"
                                Command="{Binding ShowPlayerViewCommand}"
                                Style="{StaticResource BackButtonStyle}"
                                ToolTipService.ToolTip="Back to Player">
                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph=""/>
                        </Button>

                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"
                                   Style="{ThemeResource SubtitleTextBlockStyle}"
                                   Text="Current Queue"
                                   Margin="12,0,12,4"/>
                    </Grid>

                    <ListView Grid.Row="1"
                              ItemsSource="{Binding CurrentQueue}"
                              SelectionMode="None"
                              ItemContainerStyle="{StaticResource QueueListViewItemStyle}"
                              VirtualizingStackPanel.VirtualizationMode="Recycling">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ItemsStackPanel ItemsUpdatingScrollMode="KeepItemsInView" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="models:Song">
                                <StackPanel Margin="0,4">
                                    <TextBlock
                                        Style="{ThemeResource BodyStrongTextBlockStyle}"
                                        Text="{x:Bind Title}"
                                        TextTrimming="CharacterEllipsis" />
                                    <TextBlock
                                        Style="{ThemeResource CaptionTextBlockStyle}"
                                        Text="{x:Bind Artist.Name}"
                                        TextTrimming="CharacterEllipsis" />
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </Grid>
        </Grid>
    </Border>
</Window>