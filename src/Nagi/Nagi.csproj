<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<OutputType>WinExe</OutputType>
		<TargetFramework>net$(NetVersion)-windows$(WindowsSdkVersion)</TargetFramework>
		<TargetPlatformMinVersion>$(WindowsTargetPlatformMinVersion)</TargetPlatformMinVersion>
		<RootNamespace>Nagi</RootNamespace>
		<ApplicationManifest>app.manifest</ApplicationManifest>
		<Platforms>x86;x64;ARM64</Platforms>
		<RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
		<WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
		<UseWinUI>true</UseWinUI>
		<EnableMsixTooling>true</EnableMsixTooling>
		<Nullable>enable</Nullable>
		<DefineConstants>$(DefineConstants);DISABLE_XAML_GENERATED_MAIN</DefineConstants>
		<Configurations>Debug;Release;DebugUnpackaged;ReleaseUnpackaged</Configurations>
	</PropertyGroup>

	<!-- =============================================================== -->
	<!-- == Packaged (MSIX) Configuration Properties                    == -->
	<!-- =============================================================== -->
	<PropertyGroup Condition="!$(Configuration.Contains('Unpackaged'))">
		<WindowsPackageType>MSIX</WindowsPackageType>
		<PublishProfile>win-$(Platform).pubxml</PublishProfile>

		<!-- These properties will override the values in Package.appxmanifest during build -->
		<ApplicationDisplayVersion>$(AppxPackageVersion)</ApplicationDisplayVersion>
		<ApplicationVersion>$(AppxPackageVersion.Replace('.', ''))</ApplicationVersion>
		<DefineConstants>$(DefineConstants);MSIX_PACKAGE</DefineConstants>
	</PropertyGroup>

	<!-- =============================================================== -->
	<!-- == Unpackaged Configuration Properties                         == -->
	<!-- =============================================================== -->
	<PropertyGroup Condition="$(Configuration.Contains('Unpackaged'))">
		<WindowsPackageType>None</WindowsPackageType>
		<ApplicationIcon>Assets\AppLogo.ico</ApplicationIcon>
	</PropertyGroup>

	<!-- =============================================================== -->
	<!-- == Packaged (MSIX) Specific Item Groups                        == -->
	<!-- =============================================================== -->
	<ItemGroup Condition="!$(Configuration.Contains('Unpackaged'))">
		<Content Include="Assets\SplashScreen.scale-200.png" />
		<Content Include="Assets\LockScreenLogo.scale-200.png" />
		<Content Include="Assets\Square150x150Logo.scale-200.png" />
		<Content Include="Assets\Square44x44Logo.scale-200.png" />
		<Content Include="Assets\Square44x44Logo.targetsize-24_altform-unplated.png" />
		<Content Include="Assets\Wide310x150Logo.scale-200.png" />
	</ItemGroup>

	<!-- The MsixProjectCapability is only needed for packaged builds -->
	<ItemGroup Condition="!$(Configuration.Contains('Unpackaged')) and '$(EnableMsixTooling)'=='true'">
		<ProjectCapability Include="Msix" />
	</ItemGroup>
	<ItemGroup>
	  <Content Remove="Assets\Raws\vertbanner.png" />
	</ItemGroup>

	<!-- =============================================================== -->
	<!-- == Common Item Groups                                          == -->
	<!-- =============================================================== -->
	<ItemGroup>
		<PackageReference Include="ColorThief.ImageSharp" Version="$(ColorThiefImageSharpVersion)" />
		<PackageReference Include="CommunityToolkit.Mvvm" Version="$(CommunityToolkitMvvmVersion)" />
		<PackageReference Include="CommunityToolkit.WinUI.Controls.ColorPicker" Version="$(CommunityToolkitWinUIVersion)" />
		<PackageReference Include="CommunityToolkit.WinUI.Controls.SettingsControls" Version="$(CommunityToolkitWinUIVersion)" />
		<PackageReference Include="CommunityToolkit.WinUI.Media" Version="$(CommunityToolkitWinUIVersion)" />
		<PackageReference Include="DiscordRichPresence" Version="$(DiscordRichPresenceVersion)" />
		<PackageReference Include="H.NotifyIcon.WinUI" Version="$(HNotifyIconWinUIVersion)" />
		<PackageReference Include="ImageEx.WinUI" Version="$(ImageExWinUIVersion)" />
		<PackageReference Include="MaterialColorUtilities" Version="$(MaterialColorUtilitiesVersion)" />
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="$(EntityFrameworkCoreVersion)" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="$(EntityFrameworkCoreVersion)">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="$(EntityFrameworkCoreVersion)" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="$(EntityFrameworkCoreVersion)">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.Extensions.Configuration" Version="$(MicrosoftExtensionsConfigurationVersion)" />
		<PackageReference Include="Microsoft.Extensions.Configuration.FileExtensions" Version="$(MicrosoftExtensionsConfigurationFileExtensionsVersion)" />
		<PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="$(MicrosoftExtensionsConfigurationJsonVersion)" />
		<PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="$(DependencyInjectionVersion)" />
		<PackageReference Include="Microsoft.Extensions.Http" Version="$(MicrosoftExtensionsHttpVersion)" />
		<PackageReference Include="Microsoft.Graphics.Win2D" Version="$(MicrosoftGraphicsWin2DVersion)" />
		<PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="$(MicrosoftWindowsSDKBuildToolsVersion)" />
		<PackageReference Include="Microsoft.WindowsAppSDK" Version="$(WindowsAppSdkVersion)" />
		<PackageReference Include="TagLibSharp" Version="$(TagLibSharpVersion)" />
		<PackageReference Include="Velopack" Version="$(VelopackVersion)" Condition="$(Configuration.Contains('Unpackaged'))" />
	</ItemGroup>

	<ItemGroup>
		<Content Include="Assets\AppLogo.ico">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
		<Content Include="Assets\Raws\AppLogo.svg">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
		<Content Include="Assets\Raws\AppLogo.png">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

	<ItemGroup>
		<None Update="appsettings.json">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<ItemGroup>
		<Page Update="Styles\AlbumPageColors.xaml">
			<CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</Page>
	</ItemGroup>

	<!-- The "Package and Publish" menu should only appear for packaged configurations -->
	<PropertyGroup Condition="!$(Configuration.Contains('Unpackaged')) and '$(EnableMsixTooling)'=='true'">
		<HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
	</PropertyGroup>

	<!-- Publish Properties -->
	<PropertyGroup>
		<PublishReadyToRun Condition="'$(Configuration)' == 'Debug' or '$(Configuration)' == 'DebugUnpackaged'">False</PublishReadyToRun>
		<PublishReadyToRun Condition="'$(Configuration)' != 'Debug' and '$(Configuration)' != 'DebugUnpackaged'">True</PublishReadyToRun>
		<PublishTrimmed>false</PublishTrimmed>
		<SupportedOSPlatformVersion>10.0.18362.0</SupportedOSPlatformVersion>
		<PackageCertificateThumbprint>3EBE28646614296DE51CCE9C9B6C6F75427D7C6C</PackageCertificateThumbprint>
		<AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>
		<GenerateAppInstallerFile>False</GenerateAppInstallerFile>
		<AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
		<AppxAutoIncrementPackageRevision>False</AppxAutoIncrementPackageRevision>
		<GenerateTestArtifacts>True</GenerateTestArtifacts>
		<AppxBundle>Always</AppxBundle>
		<AppxBundlePlatforms>x86|x64|arm64</AppxBundlePlatforms>
		<GenerateTemporaryStoreCertificate>True</GenerateTemporaryStoreCertificate>
		<HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseUnpackaged|x86'">
	  <Optimize>True</Optimize>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseUnpackaged|x64'">
	  <Optimize>True</Optimize>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseUnpackaged|ARM64'">
	  <Optimize>True</Optimize>
	</PropertyGroup>
</Project>