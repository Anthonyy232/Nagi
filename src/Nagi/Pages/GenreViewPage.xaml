<!-- Nagi/Pages/GenreViewPage.xaml -->
<Page
    x:Class="Nagi.Pages.GenreViewPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:ImageEx"
    xmlns:converters="using:Nagi.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:Nagi.Models"
    x:Name="pageRoot"
    Background="Transparent"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <converters:GenreToGradientConverter x:Key="GenreToGradientConverter" />
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:TimeSpanToTimeStringConverter x:Key="TimeSpanToTimeStringConverter" />
            <converters:StringToUriConverter x:Key="StringToUriConverter" />
            <converters:CollectionToVisibilityConverter x:Key="CollectionToVisibilityConverter" />
        </ResourceDictionary>
    </Page.Resources>

    <ScrollViewer>
        <StackPanel Padding="24" Spacing="16">
            <!-- Page Header -->
            <Grid Margin="0,0,0,16">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0"
                        Width="180"
                        Height="180"
                        CornerRadius="12"
                        Background="{x:Bind ViewModel.GenreName, Converter={StaticResource GenreToGradientConverter}, Mode=OneWay}" />

                <StackPanel Grid.Column="1" Margin="24,0,0,0" VerticalAlignment="Center" Spacing="8">
                    <TextBlock Style="{ThemeResource CaptionTextBlockStyle}" Text="Genre" />
                    <TextBlock Style="{ThemeResource HeaderTextBlockStyle}"
                               Text="{x:Bind ViewModel.GenreName, Mode=OneWay}" />
                </StackPanel>
            </Grid>

            <!-- Song List Section -->
            <StackPanel Margin="0,8,0,0" Spacing="8"
                        Visibility="{x:Bind ViewModel.Songs, Converter={StaticResource CollectionToVisibilityConverter}, Mode=OneWay}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Horizontal" Spacing="12" VerticalAlignment="Center">
                        <TextBlock Style="{StaticResource SectionHeaderTextBlockStyle}" Text="Songs" />
                        <TextBlock VerticalAlignment="Center" FontSize="13"
                                   Foreground="{ThemeResource TextFillColorSecondary}"
                                   Text="{x:Bind ViewModel.TotalItemsText, Mode=OneWay}" />
                    </StackPanel>
                    <StackPanel Grid.Column="1" Orientation="Horizontal" Spacing="8" VerticalAlignment="Center">
                        <Button Command="{x:Bind ViewModel.PlayAllSongsCommand}" Style="{StaticResource SongListViewPageIconButton}" ToolTipService.ToolTip="Play all">
                            <FontIcon FontSize="16" Glyph="" />
                        </Button>
                        <Button Command="{x:Bind ViewModel.ShuffleAndPlayAllSongsCommand}" Style="{StaticResource SongListViewPageIconButton}" ToolTipService.ToolTip="Shuffle and play all">
                            <FontIcon FontSize="16" Glyph="" />
                        </Button>
                        <Button Style="{StaticResource SongListViewPageIconButton}" ToolTipService.ToolTip="{x:Bind ViewModel.CurrentSortOrderText, Mode=OneWay}">
                            <Button.Flyout>
                                <MenuFlyout Placement="Bottom">
                                    <MenuFlyoutItem Command="{x:Bind ViewModel.RefreshOrSortSongsCommand}" CommandParameter="TitleAsc" Text="A to Z" />
                                    <MenuFlyoutItem Command="{x:Bind ViewModel.RefreshOrSortSongsCommand}" CommandParameter="TitleDesc" Text="Z to A" />
                                    <MenuFlyoutItem Command="{x:Bind ViewModel.RefreshOrSortSongsCommand}" CommandParameter="DateAddedDesc" Text="Newest" />
                                    <MenuFlyoutItem Command="{x:Bind ViewModel.RefreshOrSortSongsCommand}" CommandParameter="DateAddedAsc" Text="Oldest" />
                                    <MenuFlyoutItem Command="{x:Bind ViewModel.RefreshOrSortSongsCommand}" CommandParameter="ArtistAsc" Text="Artist" />
                                    <MenuFlyoutItem Command="{x:Bind ViewModel.RefreshOrSortSongsCommand}" CommandParameter="AlbumAsc" Text="Album" />
                                </MenuFlyout>
                            </Button.Flyout>
                            <FontIcon FontSize="16" Glyph="" />
                        </Button>
                    </StackPanel>
                </Grid>

                <ListView
                    x:Name="SongsListView"
                    IsItemClickEnabled="True"
                    ItemContainerStyle="{StaticResource SongListViewPageListViewItemStyle}"
                    ItemsSource="{x:Bind ViewModel.Songs, Mode=OneWay}"
                    SelectionChanged="SongsListView_SelectionChanged"
                    SelectionMode="Extended">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="models:Song">
                            <Grid Height="54" ColumnSpacing="12" Background="Transparent">
                                <Grid.ContextFlyout>
                                    <MenuFlyout Opening="SongItemMenuFlyout_Opening">
                                        <MenuFlyoutItem Command="{Binding DataContext.PlaySelectedSongsCommand, ElementName=pageRoot}" Text="Play" />
                                        <MenuFlyoutItem Command="{Binding DataContext.PlaySelectedSongsNextCommand, ElementName=pageRoot}" Text="Play Next" />
                                        <MenuFlyoutItem Command="{Binding DataContext.AddSelectedSongsToQueueCommand, ElementName=pageRoot}" Text="Add to Queue" />
                                        <MenuFlyoutSubItem x:Name="AddToPlaylistSubMenu" Text="Add to playlist" />
                                        <MenuFlyoutSeparator Visibility="{Binding DataContext.IsSingleSongSelected, ElementName=pageRoot, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                        <MenuFlyoutItem Command="{Binding DataContext.GoToAlbumCommand, ElementName=pageRoot}" Text="Go to album" Visibility="{Binding DataContext.IsSingleSongSelected, ElementName=pageRoot, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                        <MenuFlyoutItem Command="{Binding DataContext.GoToArtistCommand, ElementName=pageRoot}" Text="Go to artist" Visibility="{Binding DataContext.IsSingleSongSelected, ElementName=pageRoot, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                        <MenuFlyoutItem Command="{Binding DataContext.ShowInFileExplorerCommand, ElementName=pageRoot}" Text="Show in explorer" Visibility="{Binding DataContext.IsSingleSongSelected, ElementName=pageRoot, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    </MenuFlyout>
                                </Grid.ContextFlyout>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition MinWidth="100" Width="1.5*" />
                                    <ColumnDefinition MinWidth="100" Width="1.5*" />
                                    <ColumnDefinition MinWidth="50" Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" Command="{Binding DataContext.PlaySongCommand, ElementName=pageRoot}" CommandParameter="{x:Bind}" Style="{StaticResource SongListViewPageSongPlayButtonStyle}">
                                    <Border Width="42" Height="42" CornerRadius="12">
                                        <controls:ImageEx IsCacheEnabled="True" PlaceholderSource="ms-appx:///Assets/DefaultAlbumArt.png" Source="{x:Bind AlbumArtUriFromTrack, Converter={StaticResource StringToUriConverter}}" Stretch="UniformToFill" />
                                    </Border>
                                </Button>

                                <TextBlock Grid.Column="1" Style="{StaticResource SongListViewPageBodyStrongTextBlockStyle}" Text="{x:Bind Title}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
                                <HyperlinkButton Grid.Column="2" Command="{Binding DataContext.GoToArtistCommand, ElementName=pageRoot}" CommandParameter="{x:Bind}" Content="{x:Bind Artist.Name}" Style="{StaticResource SongListHyperlinkButtonStyle}" />
                                <HyperlinkButton Grid.Column="3" Command="{Binding DataContext.GoToAlbumCommand, ElementName=pageRoot}" CommandParameter="{x:Bind}" Content="{x:Bind Album.Title}" Style="{StaticResource SongListHyperlinkButtonStyle}" />
                                <TextBlock Grid.Column="4" Margin="0,0,12,0" HorizontalAlignment="Right" Style="{StaticResource SongListViewPageSecondaryTextBlockStyle}" Text="{x:Bind Duration, Converter={StaticResource TimeSpanToTimeStringConverter}}" />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</Page>