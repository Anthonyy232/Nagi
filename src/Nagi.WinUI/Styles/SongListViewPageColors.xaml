<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Resource definitions for TextBox focused border brush -->
    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <StaticResource x:Key="TextBoxBorderBrushFocused" ResourceKey="AppPrimaryColorBrush" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="Light">
            <StaticResource x:Key="TextBoxBorderBrushFocused" ResourceKey="AppPrimaryColorBrush" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="HighContrast">
            <SolidColorBrush x:Key="TextBoxBorderBrushFocused" Color="{ThemeResource SystemColorHighlightColor}" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <!--
    Defines the style for the main title text on pages that display a list of songs.
    -->
    <Style x:Key="SongListViewPageTitleTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource AppPrimaryColorBrush}" />
        <Setter Property="FontSize" Value="28" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!--
    Defines a style for circular, transparent, icon-only buttons.
    -->
    <Style x:Key="SongListViewPageIconButton" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinWidth" Value="36" />
        <Setter Property="Width" Value="36" />
        <Setter Property="Height" Value="36" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource AppPrimaryColorBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    </Style>

    <!--
    Defines a style for standard filled buttons with subtle hover and pressed states.
    -->
    <Style x:Key="SongListViewPageFilledButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Background" Value="{ThemeResource ButtonBackground}" />
        <Setter Property="Padding" Value="12,8" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="MinHeight" Value="36" />
    </Style>

    <!--
    Defines the style for the interactive play button that overlays album art in a song list.
    -->
    <Style x:Key="SongListViewPageSongPlayButtonStyle" TargetType="Button"
           BasedOn="{StaticResource SongListViewPageIconButton}">
        <Setter Property="Width" Value="42" />
        <Setter Property="Height" Value="42" />
        <Setter Property="Margin" Value="12,0,12,0" />
        <Setter Property="ToolTipService.ToolTip" Value="Play song" />
        <Setter Property="CornerRadius" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}"
                          CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Padding="{TemplateBinding Padding}" />
                        <Border x:Name="HoverOverlay" Background="#80000000"
                                CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed" />
                        <FontIcon x:Name="PlayIcon" Glyph="" FontSize="20" Foreground="White" Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverOverlay"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlayIcon"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverOverlay"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlayIcon"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverOverlay"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#A0000000" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource ListViewItemDisabledThemeOpacity}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    Defines the style for primary text elements in a song list, such as the song title.
    -->
    <Style x:Key="SongListViewPageBodyStrongTextBlockStyle" TargetType="TextBlock"
           BasedOn="{StaticResource BodyStrongTextBlockStyle}" />

    <!--
    Defines the style for secondary text elements in a song list, such as artist or album.
    -->
    <Style x:Key="SongListViewPageSecondaryTextBlockStyle" TargetType="TextBlock"
           BasedOn="{StaticResource BodyTextBlockStyle}">
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorSecondary}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <!--
     Defines the style for clickable links within a song list, such as artist or album names.
     -->
    <Style x:Key="SongListHyperlinkButtonStyle" TargetType="HyperlinkButton">
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorSecondary}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HyperlinkButton">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource AppPrimaryColorBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource AppPrimaryColorBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource TextFillColorDisabledBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    Defines a custom style for ListViewItems used in song lists.
    -->
    <Style x:Key="SongListViewPageListViewItemStyle" TargetType="ListViewItem"
           BasedOn="{StaticResource DefaultListViewItemStyle}">
        <Setter Property="Padding" Value="0,4" />
        <Setter Property="MinHeight" Value="52" />
        <Setter Property="CornerRadius" Value="8" />
    </Style>

    <!--
    Defines the style for the expanding search box in the page header.
    The focused accent color is applied separately on the control instance.
    -->
    <Style x:Key="SearchTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}">
        <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Padding" Value="12,8,40,8" />
        <Setter Property="Height" Value="36" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

</ResourceDictionary>