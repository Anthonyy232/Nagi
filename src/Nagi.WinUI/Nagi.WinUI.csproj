<Project Sdk="Microsoft.NET.Sdk">
	<!-- =============================================================== -->
	<!-- == Project Properties                                          == -->
	<!-- =============================================================== -->
	<PropertyGroup>
		<OutputType>WinExe</OutputType>
		<TargetFramework>net$(NetVersion)-windows$(WindowsSdkVersion)</TargetFramework>
		<TargetPlatformMinVersion>$(WindowsTargetPlatformMinVersion)</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion>10.0.18362.0</SupportedOSPlatformVersion>
		<ApplicationManifest>app.manifest</ApplicationManifest>
		<Platforms>x86;x64;ARM64</Platforms>
		<RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
		<UseWinUI>true</UseWinUI>
		<EnableMsixTooling>true</EnableMsixTooling>
		<Nullable>enable</Nullable>
		<DefineConstants>$(DefineConstants);DISABLE_XAML_GENERATED_MAIN</DefineConstants>
		<Configurations>Debug;Release;DebugUnpackaged;ReleaseUnpackaged</Configurations>
		<AssemblyName>Nagi</AssemblyName>
		<Product>Nagi</Product>
	</PropertyGroup>

	<!-- =============================================================== -->
	<!-- == Packaged (MSIX) Configuration                               == -->
	<!-- =============================================================== -->
	<PropertyGroup Condition="!$(Configuration.Contains('Unpackaged'))">
		<WindowsPackageType>MSIX</WindowsPackageType>
		<WindowsAppSDKSelfContained>false</WindowsAppSDKSelfContained>
		<PublishProfile>win-$(Platform).pubxml</PublishProfile>
		<ApplicationDisplayVersion>$(AppxPackageVersion)</ApplicationDisplayVersion>
		<ApplicationVersion>$(AppxPackageVersion.Replace('.', ''))</ApplicationVersion>
		<DefineConstants>$(DefineConstants);MSIX_PACKAGE</DefineConstants>
		<HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
	</PropertyGroup>

	<!-- =============================================================== -->
	<!-- == Unpackaged Configuration                                    == -->
	<!-- =============================================================== -->
	<PropertyGroup Condition="$(Configuration.Contains('Unpackaged'))">
		<WindowsPackageType>None</WindowsPackageType>
		<WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
		<ApplicationIcon>Assets\AppLogo.ico</ApplicationIcon>
	</PropertyGroup>

	<!-- =============================================================== -->
	<!-- == Build Configuration: Debug                                  == -->
	<!-- =============================================================== -->
	<PropertyGroup Condition="'$(Configuration)' == 'Debug' or '$(Configuration)' == 'DebugUnpackaged'">
		<PublishReadyToRun>false</PublishReadyToRun>
		<PublishTrimmed>false</PublishTrimmed>
		<Optimize>false</Optimize>
	</PropertyGroup>

	<!-- =============================================================== -->
	<!-- == Build Configuration: Release (AOT/Trimming)                 == -->
	<!-- =============================================================== -->
	<PropertyGroup Condition="'$(Configuration)' == 'Release' or '$(Configuration)' == 'ReleaseUnpackaged'">
		<PublishReadyToRun>true</PublishReadyToRun>
		<TieredPGO>true</TieredPGO>
		<Optimize>true</Optimize>
		<JsonSerializerIsReflectionEnabledByDefault>true</JsonSerializerIsReflectionEnabledByDefault>
	</PropertyGroup>

	<!-- =============================================================== -->
	<!-- == MSIX Publishing Properties                                  == -->
	<!-- =============================================================== -->
	<PropertyGroup>
		<PackageCertificateThumbprint>3EBE28646614296DE51CCE9C9B6C6F75427D7C6C</PackageCertificateThumbprint>
		<AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>
		<GenerateAppInstallerFile>False</GenerateAppInstallerFile>
		<AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
		<AppxAutoIncrementPackageRevision>False</AppxAutoIncrementPackageRevision>
		<GenerateTestArtifacts>True</GenerateTestArtifacts>
		<AppxBundle>Always</AppxBundle>
		<AppxBundlePlatforms>x86|x64|arm64</AppxBundlePlatforms>
		<GenerateTemporaryStoreCertificate>True</GenerateTemporaryStoreCertificate>
		<HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
	</PropertyGroup>

	<!-- =============================================================== -->
	<!-- == Package & Project References                                == -->
	<!-- =============================================================== -->
	<ItemGroup>
		<!-- Project References -->
		<ProjectReference Include="..\Nagi.Core\Nagi.Core.csproj" />

		<!-- Core SDKs and Build Tools -->
		<PackageReference Include="Microsoft.WindowsAppSDK" Version="$(WindowsAppSdkVersion)" />
		<PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="$(MicrosoftWindowsSDKBuildToolsVersion)" />

		<!-- Application Services (DI, Configuration) -->
		<PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="$(DependencyInjectionVersion)" />
		<PackageReference Include="Microsoft.Extensions.Configuration" Version="$(MicrosoftExtensionsConfigurationVersion)" />
		<PackageReference Include="Microsoft.Extensions.Configuration.FileExtensions" Version="$(MicrosoftExtensionsConfigurationFileExtensionsVersion)" />
		<PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="$(MicrosoftExtensionsConfigurationJsonVersion)" />
		<PackageReference Include="Microsoft.Extensions.Http" Version="$(MicrosoftExtensionsHttpVersion)" />

		<!-- UI Controls and Media -->
		<PackageReference Include="CommunityToolkit.WinUI.Controls.ColorPicker" Version="$(CommunityToolkitWinUIVersion)" />
		<PackageReference Include="CommunityToolkit.WinUI.Controls.SettingsControls" Version="$(CommunityToolkitWinUIVersion)" />
		<PackageReference Include="CommunityToolkit.WinUI.Media" Version="$(CommunityToolkitWinUIVersion)" />
		<PackageReference Include="H.NotifyIcon.WinUI" Version="$(HNotifyIconWinUIVersion)" />
		<PackageReference Include="ImageEx.WinUI" Version="$(ImageExWinUIVersion)" />
		<PackageReference Include="Microsoft.Graphics.Win2D" Version="$(MicrosoftGraphicsWin2DVersion)" />

		<!-- Video Playback -->
		<PackageReference Include="LibVLCSharp" Version="$(LibVLCSharpVersion)" />
		<PackageReference Include="VideoLAN.LibVLC.Windows" Version="$(LibVLCWindowsVersion)" />

		<!-- Updater (Unpackaged only) -->
		<PackageReference Include="Velopack" Version="$(VelopackVersion)" Condition="$(Configuration.Contains('Unpackaged'))" />
	</ItemGroup>

	<!-- =============================================================== -->
	<!-- == LibVLC Build Customization (Cherry-Picking)                 == -->
	<!-- =============================================================== -->
	<!--
	  This section uses an "inclusive" strategy to only copy the essential LibVLC plugins
	  needed for the application, drastically reducing the final package size.
	-->
	<ItemGroup>
		<!-- Define the list of required files for the x64 platform. -->
		<VlcWindowsX64IncludeFiles Include="
			libvlc.dll;
			libvlccore.dll;

			// --- Access (How to read files) ---
			plugins\access\libfilesystem_plugin.dll;

			// --- Demuxers (Container format support) ---
			plugins\demux\libmkv_plugin.dll;         // .mkv, .webm
			plugins\demux\libmp4_plugin.dll;         // .mp4, .m4a, .m4b, .m4v
			plugins\demux\libasf_plugin.dll;         // .asf, .wma, .wmv
			plugins\demux\libavi_plugin.dll;         // .avi
			plugins\demux\libogg_plugin.dll;         // .ogg, .oga, .ogv
			plugins\demux\libflacsys_plugin.dll;     // .flac (as a container)
			plugins\demux\libmpgv_plugin.dll;        // .mpeg, .mpg
			plugins\demux\libps_plugin.dll;          // .mpeg, .mpg (Program Stream)
			plugins\demux\libwav_plugin.dll;         // .wav
			plugins\demux\libaiff_plugin.dll;        // .aiff
			plugins\demux\libau_plugin.dll;          // .aa, .aax (Audible formats)
			plugins\demux\libmpc_plugin.dll;         // .mpc, .mpp

			// --- Decoders (The actual audio/video codecs) ---
			plugins\codec\libavcodec_plugin.dll;     // THE BIG ONE: Covers H.264, AAC, WMA, WMV, MPEG, and many more
			plugins\codec\libflac_plugin.dll;        // .flac (codec)
			plugins\codec\libvorbis_plugin.dll;      // Vorbis audio (in .ogg, .mkv)
			plugins\codec\libopus_plugin.dll;        // Opus audio (in .ogg, .mkv, .webm)
			plugins\codec\libfaad_plugin.dll;        // .aac (alternative high-quality decoder)
			plugins\codec\libmpg123_plugin.dll;      // .mp3
			plugins\codec\libvpx_plugin.dll;         // VP8/VP9 video (in .webm, .mkv)
			plugins\codec\libtheora_plugin.dll;      // Theora video (in .ogg)

			// --- Audio Output (Sending sound to the speakers) ---
			plugins\audio_output\libmmdevice_plugin.dll;  // Windows audio device enumeration
			plugins\audio_output\libwasapi_plugin.dll;    // Modern Windows Audio Session API
			plugins\audio_output\libdirectsound_plugin.dll; // Fallback audio output

			// --- Video & Text Support (Even for audio-only apps, some are needed) ---
			// Although you treat videos as audio, these are needed if LibVLC ever tries to open a video context.
			// They are small and safe to include.
			plugins\video_output\libdrawable_plugin.dll; // Required for LibVLCSharp to get a handle
			plugins\video_output\libvdummy_plugin.dll;   // Dummy video output
			plugins\text_renderer\libfreetype_plugin.dll; // For rendering any text/subtitles/OSD
			plugins\video_chroma\libswscale_plugin.dll;  // Color space conversion

			// --- Audio Filters (For format conversion) ---
			plugins\audio_filter\libaudio_format_plugin.dll;
			plugins\audio_filter\libsamplerate_plugin.dll;
			plugins\audio_filter\libugly_resampler_plugin.dll
			" />

		<!-- Apply the same inclusion rules to x86 and ARM64 builds by referencing the x64 list. -->
		<VlcWindowsX86IncludeFiles Include="@(VlcWindowsX64IncludeFiles)" />
		<VlcWindowsArm64IncludeFiles Include="@(VlcWindowsX64IncludeFiles)" />
	</ItemGroup>

	<!-- =============================================================== -->
	<!-- == File/Folder Exclusions & Inclusions                         == -->
	<!-- =============================================================== -->
	<ItemGroup>
		<!-- Exclude specific folders from build -->
		<Compile Remove="Assets\Raws\**" />
		<Content Remove="Assets\Raws\**" />
		<EmbeddedResource Remove="Assets\Raws\**" />
		<None Remove="Assets\Raws\**" />
		<Page Remove="Assets\Raws\**" />
		<PRIResource Remove="Assets\Raws\**" />

		<Compile Remove="Interfaces\**" />
		<EmbeddedResource Remove="Interfaces\**" />
		<None Remove="Interfaces\**" />
		<Page Remove="Interfaces\**" />
		<PRIResource Remove="Interfaces\**" />
	</ItemGroup>

	<ItemGroup Condition="!$(Configuration.Contains('Unpackaged'))">
		<!-- MSIX Assets -->
		<Content Include="Assets\SplashScreen.scale-200.png" />
		<Content Include="Assets\LockScreenLogo.scale-200.png" />
		<Content Include="Assets\Square150x150Logo.scale-200.png" />
		<Content Include="Assets\Square44x44Logo.scale-200.png" />
		<Content Include="Assets\Square44x44Logo.targetsize-24_altform-unplated.png" />
		<Content Include="Assets\Wide310x150Logo.scale-200.png" />
		<ProjectCapability Include="Msix" />
	</ItemGroup>

	<ItemGroup>
		<!-- Application Content -->
		<Content Include="Assets\AppLogo.ico">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
		<None Update="appsettings.json">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>

</Project>