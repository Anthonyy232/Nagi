name: Create Nagi Release with Velopack

on:
  push:
    branches: [ master ]

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 

    - name: Get and Format Version from Project Properties
      id: get_version
      shell: bash
      run: |
        four_part_version=$(grep -oE '<AppxPackageVersion>[^<]+' Directory.Build.props | sed 's/<AppxPackageVersion>//')
        three_part_version=$(echo "$four_part_version" | sed 's/\.[0-9]\+$//')
        echo "version=$three_part_version" >> $GITHUB_OUTPUT

    - name: Install .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Install vpk command-line tool
      run: dotnet tool install -g vpk

    # This loop builds and packages for each platform into a common Releases folder
    - name: Build and Package for All Platforms
      run: |
        $platforms = "win-x64", "win-x86", "win-arm64"
        foreach ($p in $platforms) {
          echo "Building for $p..."
          dotnet publish src/Nagi/Nagi.csproj -c ReleaseUnpackaged -r $p --self-contained -o ./publish/$p
          vpk pack -u Nagi -v ${{ steps.get_version.outputs.version }} -p ./publish/$p -o ./Releases
        }

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Nagi-Release-${{ steps.get_version.outputs.version }}
        path: ./Releases/